:Namespace raygui
⍝ THIS TEXT HAS BEEN AUTOGENERATED

RAYGUI_VERSION_MAJOR ← 4     ⍝
RAYGUI_VERSION_MINOR ← 0     ⍝
RAYGUI_VERSION_PATCH ← 0     ⍝
RAYGUI_VERSION       ← '4.0' ⍝
SCROLLBAR_LEFT_SIDE  ← 0     ⍝
SCROLLBAR_RIGHT_SIDE ← 1     ⍝

:Namespace GuiState ⍝ Gui control state
  STATE_NORMAL   ← 0  ⍝
  STATE_FOCUSED  ← 1  ⍝
  STATE_PRESSED  ← 2  ⍝
  STATE_DISABLED ← 3  ⍝
:EndNamespace

:Namespace GuiTextAlignment ⍝ Gui control text alignment
  TEXT_ALIGN_LEFT   ← 0  ⍝
  TEXT_ALIGN_CENTER ← 1  ⍝
  TEXT_ALIGN_RIGHT  ← 2  ⍝
:EndNamespace

:Namespace GuiTextAlignmentVertical ⍝ Gui control text alignment vertical
  TEXT_ALIGN_TOP    ← 0  ⍝
  TEXT_ALIGN_MIDDLE ← 1  ⍝
  TEXT_ALIGN_BOTTOM ← 2  ⍝
:EndNamespace

:Namespace GuiTextWrapMode ⍝ Gui control text wrap mode
  TEXT_WRAP_NONE ← 0  ⍝
  TEXT_WRAP_CHAR ← 1  ⍝
  TEXT_WRAP_WORD ← 2  ⍝
:EndNamespace

:Namespace GuiControl ⍝ Gui controls
  DEFAULT     ← 0   ⍝
  LABEL       ← 1   ⍝ Used also for: LABELBUTTON
  BUTTON      ← 2   ⍝
  TOGGLE      ← 3   ⍝ Used also for: TOGGLEGROUP
  SLIDER      ← 4   ⍝ Used also for: SLIDERBAR, TOGGLESLIDER
  PROGRESSBAR ← 5   ⍝
  CHECKBOX    ← 6   ⍝
  COMBOBOX    ← 7   ⍝
  DROPDOWNBOX ← 8   ⍝
  TEXTBOX     ← 9   ⍝ Used also for: TEXTBOXMULTI
  VALUEBOX    ← 10  ⍝
  SPINNER     ← 11  ⍝ Uses: BUTTON, VALUEBOX
  LISTVIEW    ← 12  ⍝
  COLORPICKER ← 13  ⍝
  SCROLLBAR   ← 14  ⍝
  STATUSBAR   ← 15  ⍝
:EndNamespace

:Namespace GuiControlProperty ⍝ Gui base properties for every control
  BORDER_COLOR_NORMAL   ← 0   ⍝ Control border color in STATE_NORMAL
  BASE_COLOR_NORMAL     ← 1   ⍝ Control base color in STATE_NORMAL
  TEXT_COLOR_NORMAL     ← 2   ⍝ Control text color in STATE_NORMAL
  BORDER_COLOR_FOCUSED  ← 3   ⍝ Control border color in STATE_FOCUSED
  BASE_COLOR_FOCUSED    ← 4   ⍝ Control base color in STATE_FOCUSED
  TEXT_COLOR_FOCUSED    ← 5   ⍝ Control text color in STATE_FOCUSED
  BORDER_COLOR_PRESSED  ← 6   ⍝ Control border color in STATE_PRESSED
  BASE_COLOR_PRESSED    ← 7   ⍝ Control base color in STATE_PRESSED
  TEXT_COLOR_PRESSED    ← 8   ⍝ Control text color in STATE_PRESSED
  BORDER_COLOR_DISABLED ← 9   ⍝ Control border color in STATE_DISABLED
  BASE_COLOR_DISABLED   ← 10  ⍝ Control base color in STATE_DISABLED
  TEXT_COLOR_DISABLED   ← 11  ⍝ Control text color in STATE_DISABLED
  BORDER_WIDTH          ← 12  ⍝ Control border size, 0 for no border
  TEXT_PADDING          ← 13  ⍝ Control text padding, not considering border
  TEXT_ALIGNMENT        ← 14  ⍝ Control text horizontal alignment inside control text bound (after border and padding)
:EndNamespace

:Namespace GuiDefaultProperty ⍝ DEFAULT extended properties
  TEXT_SIZE               ← 16  ⍝ Text size (glyphs max height)
  TEXT_SPACING            ← 17  ⍝ Text spacing between glyphs
  LINE_COLOR              ← 18  ⍝ Line control color
  BACKGROUND_COLOR        ← 19  ⍝ Background color
  TEXT_LINE_SPACING       ← 20  ⍝ Text spacing between lines
  TEXT_ALIGNMENT_VERTICAL ← 21  ⍝ Text vertical alignment inside text bounds (after border and padding)
  TEXT_WRAP_MODE          ← 22  ⍝ Text wrap-mode inside text bounds
:EndNamespace

:Namespace GuiToggleProperty ⍝ Toggle/ToggleGroup
  GROUP_PADDING ← 16  ⍝ ToggleGroup separation between toggles
:EndNamespace

:Namespace GuiSliderProperty ⍝ Slider/SliderBar
  SLIDER_WIDTH   ← 16  ⍝ Slider size of internal bar
  SLIDER_PADDING ← 17  ⍝ Slider/SliderBar internal bar padding
:EndNamespace

:Namespace GuiProgressBarProperty ⍝ ProgressBar
  PROGRESS_PADDING ← 16  ⍝ ProgressBar internal padding
:EndNamespace

:Namespace GuiScrollBarProperty ⍝ ScrollBar
  ARROWS_SIZE           ← 16  ⍝ ScrollBar arrows size
  ARROWS_VISIBLE        ← 17  ⍝ ScrollBar arrows visible
  SCROLL_SLIDER_PADDING ← 18  ⍝ ScrollBar slider internal padding
  SCROLL_SLIDER_SIZE    ← 19  ⍝ ScrollBar slider size
  SCROLL_PADDING        ← 20  ⍝ ScrollBar scroll padding from arrows
  SCROLL_SPEED          ← 21  ⍝ ScrollBar scrolling speed
:EndNamespace

:Namespace GuiCheckBoxProperty ⍝ CheckBox
  CHECK_PADDING ← 16  ⍝ CheckBox internal check padding
:EndNamespace

:Namespace GuiComboBoxProperty ⍝ ComboBox
  COMBO_BUTTON_WIDTH   ← 16  ⍝ ComboBox right button width
  COMBO_BUTTON_SPACING ← 17  ⍝ ComboBox button separation
:EndNamespace

:Namespace GuiDropdownBoxProperty ⍝ DropdownBox
  ARROW_PADDING          ← 16  ⍝ DropdownBox arrow separation from border and items
  DROPDOWN_ITEMS_SPACING ← 17  ⍝ DropdownBox items separation
:EndNamespace

:Namespace GuiTextBoxProperty ⍝ TextBox/TextBoxMulti/ValueBox/Spinner
  TEXT_READONLY ← 16  ⍝ TextBox in read-only mode: 0-text editable, 1-text no-editable
:EndNamespace

:Namespace GuiSpinnerProperty ⍝ Spinner
  SPIN_BUTTON_WIDTH   ← 16  ⍝ Spinner left/right buttons width
  SPIN_BUTTON_SPACING ← 17  ⍝ Spinner buttons separation
:EndNamespace

:Namespace GuiListViewProperty ⍝ ListView
  LIST_ITEMS_HEIGHT  ← 16  ⍝ ListView items height
  LIST_ITEMS_SPACING ← 17  ⍝ ListView items separation
  SCROLLBAR_WIDTH    ← 18  ⍝ ListView scrollbar size (usually width)
  SCROLLBAR_SIDE     ← 19  ⍝ ListView scrollbar side (0-SCROLLBAR_LEFT_SIDE, 1-SCROLLBAR_RIGHT_SIDE)
:EndNamespace

:Namespace GuiColorPickerProperty ⍝ ColorPicker
  COLOR_SELECTOR_SIZE      ← 16  ⍝
  HUEBAR_WIDTH             ← 17  ⍝ ColorPicker right hue bar width
  HUEBAR_PADDING           ← 18  ⍝ ColorPicker right hue bar separation from panel
  HUEBAR_SELECTOR_HEIGHT   ← 19  ⍝ ColorPicker right hue bar selector height
  HUEBAR_SELECTOR_OVERFLOW ← 20  ⍝ ColorPicker right hue bar selector overflow
:EndNamespace

:Namespace GuiIconName ⍝
  ICON_NONE                    ← 0    ⍝
  ICON_FOLDER_FILE_OPEN        ← 1    ⍝
  ICON_FILE_SAVE_CLASSIC       ← 2    ⍝
  ICON_FOLDER_OPEN             ← 3    ⍝
  ICON_FOLDER_SAVE             ← 4    ⍝
  ICON_FILE_OPEN               ← 5    ⍝
  ICON_FILE_SAVE               ← 6    ⍝
  ICON_FILE_EXPORT             ← 7    ⍝
  ICON_FILE_ADD                ← 8    ⍝
  ICON_FILE_DELETE             ← 9    ⍝
  ICON_FILETYPE_TEXT           ← 10   ⍝
  ICON_FILETYPE_AUDIO          ← 11   ⍝
  ICON_FILETYPE_IMAGE          ← 12   ⍝
  ICON_FILETYPE_PLAY           ← 13   ⍝
  ICON_FILETYPE_VIDEO          ← 14   ⍝
  ICON_FILETYPE_INFO           ← 15   ⍝
  ICON_FILE_COPY               ← 16   ⍝
  ICON_FILE_CUT                ← 17   ⍝
  ICON_FILE_PASTE              ← 18   ⍝
  ICON_CURSOR_HAND             ← 19   ⍝
  ICON_CURSOR_POINTER          ← 20   ⍝
  ICON_CURSOR_CLASSIC          ← 21   ⍝
  ICON_PENCIL                  ← 22   ⍝
  ICON_PENCIL_BIG              ← 23   ⍝
  ICON_BRUSH_CLASSIC           ← 24   ⍝
  ICON_BRUSH_PAINTER           ← 25   ⍝
  ICON_WATER_DROP              ← 26   ⍝
  ICON_COLOR_PICKER            ← 27   ⍝
  ICON_RUBBER                  ← 28   ⍝
  ICON_COLOR_BUCKET            ← 29   ⍝
  ICON_TEXT_T                  ← 30   ⍝
  ICON_TEXT_A                  ← 31   ⍝
  ICON_SCALE                   ← 32   ⍝
  ICON_RESIZE                  ← 33   ⍝
  ICON_FILTER_POINT            ← 34   ⍝
  ICON_FILTER_BILINEAR         ← 35   ⍝
  ICON_CROP                    ← 36   ⍝
  ICON_CROP_ALPHA              ← 37   ⍝
  ICON_SQUARE_TOGGLE           ← 38   ⍝
  ICON_SYMMETRY                ← 39   ⍝
  ICON_SYMMETRY_HORIZONTAL     ← 40   ⍝
  ICON_SYMMETRY_VERTICAL       ← 41   ⍝
  ICON_LENS                    ← 42   ⍝
  ICON_LENS_BIG                ← 43   ⍝
  ICON_EYE_ON                  ← 44   ⍝
  ICON_EYE_OFF                 ← 45   ⍝
  ICON_FILTER_TOP              ← 46   ⍝
  ICON_FILTER                  ← 47   ⍝
  ICON_TARGET_POINT            ← 48   ⍝
  ICON_TARGET_SMALL            ← 49   ⍝
  ICON_TARGET_BIG              ← 50   ⍝
  ICON_TARGET_MOVE             ← 51   ⍝
  ICON_CURSOR_MOVE             ← 52   ⍝
  ICON_CURSOR_SCALE            ← 53   ⍝
  ICON_CURSOR_SCALE_RIGHT      ← 54   ⍝
  ICON_CURSOR_SCALE_LEFT       ← 55   ⍝
  ICON_UNDO                    ← 56   ⍝
  ICON_REDO                    ← 57   ⍝
  ICON_REREDO                  ← 58   ⍝
  ICON_MUTATE                  ← 59   ⍝
  ICON_ROTATE                  ← 60   ⍝
  ICON_REPEAT                  ← 61   ⍝
  ICON_SHUFFLE                 ← 62   ⍝
  ICON_EMPTYBOX                ← 63   ⍝
  ICON_TARGET                  ← 64   ⍝
  ICON_TARGET_SMALL_FILL       ← 65   ⍝
  ICON_TARGET_BIG_FILL         ← 66   ⍝
  ICON_TARGET_MOVE_FILL        ← 67   ⍝
  ICON_CURSOR_MOVE_FILL        ← 68   ⍝
  ICON_CURSOR_SCALE_FILL       ← 69   ⍝
  ICON_CURSOR_SCALE_RIGHT_FILL ← 70   ⍝
  ICON_CURSOR_SCALE_LEFT_FILL  ← 71   ⍝
  ICON_UNDO_FILL               ← 72   ⍝
  ICON_REDO_FILL               ← 73   ⍝
  ICON_REREDO_FILL             ← 74   ⍝
  ICON_MUTATE_FILL             ← 75   ⍝
  ICON_ROTATE_FILL             ← 76   ⍝
  ICON_REPEAT_FILL             ← 77   ⍝
  ICON_SHUFFLE_FILL            ← 78   ⍝
  ICON_EMPTYBOX_SMALL          ← 79   ⍝
  ICON_BOX                     ← 80   ⍝
  ICON_BOX_TOP                 ← 81   ⍝
  ICON_BOX_TOP_RIGHT           ← 82   ⍝
  ICON_BOX_RIGHT               ← 83   ⍝
  ICON_BOX_BOTTOM_RIGHT        ← 84   ⍝
  ICON_BOX_BOTTOM              ← 85   ⍝
  ICON_BOX_BOTTOM_LEFT         ← 86   ⍝
  ICON_BOX_LEFT                ← 87   ⍝
  ICON_BOX_TOP_LEFT            ← 88   ⍝
  ICON_BOX_CENTER              ← 89   ⍝
  ICON_BOX_CIRCLE_MASK         ← 90   ⍝
  ICON_POT                     ← 91   ⍝
  ICON_ALPHA_MULTIPLY          ← 92   ⍝
  ICON_ALPHA_CLEAR             ← 93   ⍝
  ICON_DITHERING               ← 94   ⍝
  ICON_MIPMAPS                 ← 95   ⍝
  ICON_BOX_GRID                ← 96   ⍝
  ICON_GRID                    ← 97   ⍝
  ICON_BOX_CORNERS_SMALL       ← 98   ⍝
  ICON_BOX_CORNERS_BIG         ← 99   ⍝
  ICON_FOUR_BOXES              ← 100  ⍝
  ICON_GRID_FILL               ← 101  ⍝
  ICON_BOX_MULTISIZE           ← 102  ⍝
  ICON_ZOOM_SMALL              ← 103  ⍝
  ICON_ZOOM_MEDIUM             ← 104  ⍝
  ICON_ZOOM_BIG                ← 105  ⍝
  ICON_ZOOM_ALL                ← 106  ⍝
  ICON_ZOOM_CENTER             ← 107  ⍝
  ICON_BOX_DOTS_SMALL          ← 108  ⍝
  ICON_BOX_DOTS_BIG            ← 109  ⍝
  ICON_BOX_CONCENTRIC          ← 110  ⍝
  ICON_BOX_GRID_BIG            ← 111  ⍝
  ICON_OK_TICK                 ← 112  ⍝
  ICON_CROSS                   ← 113  ⍝
  ICON_ARROW_LEFT              ← 114  ⍝
  ICON_ARROW_RIGHT             ← 115  ⍝
  ICON_ARROW_DOWN              ← 116  ⍝
  ICON_ARROW_UP                ← 117  ⍝
  ICON_ARROW_LEFT_FILL         ← 118  ⍝
  ICON_ARROW_RIGHT_FILL        ← 119  ⍝
  ICON_ARROW_DOWN_FILL         ← 120  ⍝
  ICON_ARROW_UP_FILL           ← 121  ⍝
  ICON_AUDIO                   ← 122  ⍝
  ICON_FX                      ← 123  ⍝
  ICON_WAVE                    ← 124  ⍝
  ICON_WAVE_SINUS              ← 125  ⍝
  ICON_WAVE_SQUARE             ← 126  ⍝
  ICON_WAVE_TRIANGULAR         ← 127  ⍝
  ICON_CROSS_SMALL             ← 128  ⍝
  ICON_PLAYER_PREVIOUS         ← 129  ⍝
  ICON_PLAYER_PLAY_BACK        ← 130  ⍝
  ICON_PLAYER_PLAY             ← 131  ⍝
  ICON_PLAYER_PAUSE            ← 132  ⍝
  ICON_PLAYER_STOP             ← 133  ⍝
  ICON_PLAYER_NEXT             ← 134  ⍝
  ICON_PLAYER_RECORD           ← 135  ⍝
  ICON_MAGNET                  ← 136  ⍝
  ICON_LOCK_CLOSE              ← 137  ⍝
  ICON_LOCK_OPEN               ← 138  ⍝
  ICON_CLOCK                   ← 139  ⍝
  ICON_TOOLS                   ← 140  ⍝
  ICON_GEAR                    ← 141  ⍝
  ICON_GEAR_BIG                ← 142  ⍝
  ICON_BIN                     ← 143  ⍝
  ICON_HAND_POINTER            ← 144  ⍝
  ICON_LASER                   ← 145  ⍝
  ICON_COIN                    ← 146  ⍝
  ICON_EXPLOSION               ← 147  ⍝
  ICON_1UP                     ← 148  ⍝
  ICON_PLAYER                  ← 149  ⍝
  ICON_PLAYER_JUMP             ← 150  ⍝
  ICON_KEY                     ← 151  ⍝
  ICON_DEMON                   ← 152  ⍝
  ICON_TEXT_POPUP              ← 153  ⍝
  ICON_GEAR_EX                 ← 154  ⍝
  ICON_CRACK                   ← 155  ⍝
  ICON_CRACK_POINTS            ← 156  ⍝
  ICON_STAR                    ← 157  ⍝
  ICON_DOOR                    ← 158  ⍝
  ICON_EXIT                    ← 159  ⍝
  ICON_MODE_2D                 ← 160  ⍝
  ICON_MODE_3D                 ← 161  ⍝
  ICON_CUBE                    ← 162  ⍝
  ICON_CUBE_FACE_TOP           ← 163  ⍝
  ICON_CUBE_FACE_LEFT          ← 164  ⍝
  ICON_CUBE_FACE_FRONT         ← 165  ⍝
  ICON_CUBE_FACE_BOTTOM        ← 166  ⍝
  ICON_CUBE_FACE_RIGHT         ← 167  ⍝
  ICON_CUBE_FACE_BACK          ← 168  ⍝
  ICON_CAMERA                  ← 169  ⍝
  ICON_SPECIAL                 ← 170  ⍝
  ICON_LINK_NET                ← 171  ⍝
  ICON_LINK_BOXES              ← 172  ⍝
  ICON_LINK_MULTI              ← 173  ⍝
  ICON_LINK                    ← 174  ⍝
  ICON_LINK_BROKE              ← 175  ⍝
  ICON_TEXT_NOTES              ← 176  ⍝
  ICON_NOTEBOOK                ← 177  ⍝
  ICON_SUITCASE                ← 178  ⍝
  ICON_SUITCASE_ZIP            ← 179  ⍝
  ICON_MAILBOX                 ← 180  ⍝
  ICON_MONITOR                 ← 181  ⍝
  ICON_PRINTER                 ← 182  ⍝
  ICON_PHOTO_CAMERA            ← 183  ⍝
  ICON_PHOTO_CAMERA_FLASH      ← 184  ⍝
  ICON_HOUSE                   ← 185  ⍝
  ICON_HEART                   ← 186  ⍝
  ICON_CORNER                  ← 187  ⍝
  ICON_VERTICAL_BARS           ← 188  ⍝
  ICON_VERTICAL_BARS_FILL      ← 189  ⍝
  ICON_LIFE_BARS               ← 190  ⍝
  ICON_INFO                    ← 191  ⍝
  ICON_CROSSLINE               ← 192  ⍝
  ICON_HELP                    ← 193  ⍝
  ICON_FILETYPE_ALPHA          ← 194  ⍝
  ICON_FILETYPE_HOME           ← 195  ⍝
  ICON_LAYERS_VISIBLE          ← 196  ⍝
  ICON_LAYERS                  ← 197  ⍝
  ICON_WINDOW                  ← 198  ⍝
  ICON_HIDPI                   ← 199  ⍝
  ICON_FILETYPE_BINARY         ← 200  ⍝
  ICON_HEX                     ← 201  ⍝
  ICON_SHIELD                  ← 202  ⍝
  ICON_FILE_NEW                ← 203  ⍝
  ICON_FOLDER_ADD              ← 204  ⍝
  ICON_ALARM                   ← 205  ⍝
  ICON_CPU                     ← 206  ⍝
  ICON_ROM                     ← 207  ⍝
  ICON_STEP_OVER               ← 208  ⍝
  ICON_STEP_INTO               ← 209  ⍝
  ICON_STEP_OUT                ← 210  ⍝
  ICON_RESTART                 ← 211  ⍝
  ICON_BREAKPOINT_ON           ← 212  ⍝
  ICON_BREAKPOINT_OFF          ← 213  ⍝
  ICON_BURGER_MENU             ← 214  ⍝
  ICON_CASE_SENSITIVE          ← 215  ⍝
  ICON_REG_EXP                 ← 216  ⍝
  ICON_FOLDER                  ← 217  ⍝
  ICON_FILE                    ← 218  ⍝
  ICON_SAND_TIMER              ← 219  ⍝
  ICON_220                     ← 220  ⍝
  ICON_221                     ← 221  ⍝
  ICON_222                     ← 222  ⍝
  ICON_223                     ← 223  ⍝
  ICON_224                     ← 224  ⍝
  ICON_225                     ← 225  ⍝
  ICON_226                     ← 226  ⍝
  ICON_227                     ← 227  ⍝
  ICON_228                     ← 228  ⍝
  ICON_229                     ← 229  ⍝
  ICON_230                     ← 230  ⍝
  ICON_231                     ← 231  ⍝
  ICON_232                     ← 232  ⍝
  ICON_233                     ← 233  ⍝
  ICON_234                     ← 234  ⍝
  ICON_235                     ← 235  ⍝
  ICON_236                     ← 236  ⍝
  ICON_237                     ← 237  ⍝
  ICON_238                     ← 238  ⍝
  ICON_239                     ← 239  ⍝
  ICON_240                     ← 240  ⍝
  ICON_241                     ← 241  ⍝
  ICON_242                     ← 242  ⍝
  ICON_243                     ← 243  ⍝
  ICON_244                     ← 244  ⍝
  ICON_245                     ← 245  ⍝
  ICON_246                     ← 246  ⍝
  ICON_247                     ← 247  ⍝
  ICON_248                     ← 248  ⍝
  ICON_249                     ← 249  ⍝
  ICON_250                     ← 250  ⍝
  ICON_251                     ← 251  ⍝
  ICON_252                     ← 252  ⍝
  ICON_253                     ← 253  ⍝
  ICON_254                     ← 254  ⍝
  ICON_255                     ← 255  ⍝
:EndNamespace


bool ← 'I1'
c    ← 'I1'
i    ← 'I4'
f    ← 'F4'
u    ← 'U4'
i1   ← 'I1'
u1   ← 'U1'
u8   ← 'U8'
ptr  ← ,'P'
f8   ← 'F8'
i8   ← 'I8'
u2   ← 'U2'
ustr ← '=C1'
str  ← '=0C1'

v2 ← ⍬ ⍝ Vector2 type
  v2,←⊂ '⋄Vector2' ⍝    ⍝
  v2,←⊂ f          ⍝ x  ⍝
  v2,←⊂ f          ⍝ y  ⍝

v3 ← ⍬ ⍝ Vector3 type                 // -- ConvertHSVtoRGB(), ConvertRGBtoHSV()
  v3,←⊂ '⋄Vector3' ⍝    ⍝
  v3,←⊂ f          ⍝ x  ⍝
  v3,←⊂ f          ⍝ y  ⍝
  v3,←⊂ f          ⍝ z  ⍝

Color ← ⍬ ⍝ Color type, RGBA (32bit)
  Color,←⊂ '⋄Color' ⍝    ⍝
  Color,←⊂ u1       ⍝ r  ⍝
  Color,←⊂ u1       ⍝ g  ⍝
  Color,←⊂ u1       ⍝ b  ⍝
  Color,←⊂ u1       ⍝ a  ⍝

Rectangle ← ⍬ ⍝ Rectangle type
  Rectangle,←⊂ '⋄Rectangle' ⍝         ⍝
  Rectangle,←⊂ f            ⍝ x       ⍝
  Rectangle,←⊂ f            ⍝ y       ⍝
  Rectangle,←⊂ f            ⍝ width   ⍝
  Rectangle,←⊂ f            ⍝ height  ⍝

Texture ← ⍬ ⍝ It should be redesigned to be provided by user
  Texture,←⊂ '⋄Texture' ⍝          ⍝
  Texture,←⊂ u          ⍝ id       ⍝ OpenGL texture id
  Texture,←⊂ i          ⍝ width    ⍝ Texture base width
  Texture,←⊂ i          ⍝ height   ⍝ Texture base height
  Texture,←⊂ i          ⍝ mipmaps  ⍝ Mipmap levels, 1 by default
  Texture,←⊂ i          ⍝ format   ⍝ Data format (PixelFormat type)

Image ← ⍬ ⍝ Image, pixel data stored in CPU memory (RAM)
  Image,←⊂ '⋄Image' ⍝          ⍝
  Image,←⊂ ptr      ⍝ data     ⍝ Image raw data
  Image,←⊂ i        ⍝ width    ⍝ Image base width
  Image,←⊂ i        ⍝ height   ⍝ Image base height
  Image,←⊂ i        ⍝ mipmaps  ⍝ Mipmap levels, 1 by default
  Image,←⊂ i        ⍝ format   ⍝ Data format (PixelFormat type)

GlyphInfo ← ⍬ ⍝ GlyphInfo, font characters glyphs info
  GlyphInfo,←⊂ '⋄GlyphInfo' ⍝           ⍝
  GlyphInfo,←⊂ i            ⍝ value     ⍝ Character value (Unicode)
  GlyphInfo,←⊂ i            ⍝ offsetX   ⍝ Character offset X when drawing
  GlyphInfo,←⊂ i            ⍝ offsetY   ⍝ Character offset Y when drawing
  GlyphInfo,←⊂ i            ⍝ advanceX  ⍝ Character advance position X
  GlyphInfo,←⊂ Image        ⍝ image     ⍝ Character image data

Font ← ⍬ ⍝ It should be redesigned to be provided by user
  Font,←⊂ '⋄Font'       ⍝               ⍝
  Font,←⊂ i             ⍝ baseSize      ⍝ Base size (default chars height)
  Font,←⊂ i             ⍝ glyphCount    ⍝ Number of glyph characters
  Font,←⊂ i             ⍝ glyphPadding  ⍝ Padding around the glyph characters
  Font,←⊂ Texture       ⍝ texture       ⍝ Texture atlas containing the glyphs
  Font,←⊂ '=',Rectangle ⍝ recs          ⍝ Rectangles in texture for the glyphs
  Font,←⊂ '=',GlyphInfo ⍝ glyphs        ⍝ Glyphs info data

GuiStyleProp ← ⍬ ⍝ NOTE: Used when exporting style as code for convenience
  GuiStyleProp,←⊂ '⋄GuiStyleProp' ⍝                ⍝
  GuiStyleProp,←⊂ u2              ⍝ controlId      ⍝ Control identifier
  GuiStyleProp,←⊂ u2              ⍝ propertyId     ⍝ Property identifier
  GuiStyleProp,←⊂ i               ⍝ propertyValue  ⍝ Property value
⍝ Mode is either 3:All changes, 2:only manual changes 1:only automatic changes, or 0: no changes
∇{mode} Init pathToRaylibDotAPLN ;import

pathToRaylibDotAPLN ← (⊢,'/'/⍨'/'≢⊃⍤⌽)(⊢,'.'/⍨0=≢⍤⊢),pathToRaylibDotAPLN

import ← 0 ⎕FIX pathToRaylibDotAPLN,'../non-link/setup.apln.hide'
'' ⎕NS 'import.'∘,¨import.⎕NL-2 3 9
⎕EX 'import'

pathToBinary ← lib
:If 0=⎕NC 'mode'
  mode ← 3 ⍝ Default is All changes
:EndIf


GuiEnableRAYLIB           ←           R('GuiEnableRetPtr'           (⍬                                                       )) ⍝                                                                ⍝ Enable gui controls (global state)
GuiDisableRAYLIB          ←           R('GuiDisableRetPtr'          (⍬                                                       )) ⍝                                                                ⍝ Disable gui controls (global state)
GuiLockRAYLIB             ←           R('GuiLockRetPtr'             (⍬                                                       )) ⍝                                                                ⍝ Lock gui controls (global state)
GuiUnlockRAYLIB           ←           R('GuiUnlockRetPtr'           (⍬                                                       )) ⍝                                                                ⍝ Unlock gui controls (global state)
GuiIsLockedRAYLIB         ←           R('GuiIsLockedRetPtr'         (,⊂ ('>',bool)                                           )) ⍝                                                                ⍝ Check if gui is locked (global state)
GuiSetAlphaRAYLIB         ←           R('GuiSetAlphaRetPtr'         (,⊂ f                                                    )) ⍝ alpha                                                          ⍝ Set gui controls alpha (global state), alpha goes from 0.0f to 1.0f
GuiSetStateRAYLIB         ←           R('GuiSetStateRetPtr'         (,⊂ i                                                    )) ⍝ state                                                          ⍝ Set gui state (global state)
GuiGetStateRAYLIB         ←           R('GuiGetStateRetPtr'         (,⊂ ('>',i)                                              )) ⍝                                                                ⍝ Get gui state (global state)
GuiSetFontRAYLIB          ←           R('GuiSetFontRetPtr'          (,⊂ Font                                                 )) ⍝ font                                                           ⍝ Set gui custom font (global state)
GuiGetFontRAYLIB          ←           R('GuiGetFontRetPtr'          (,⊂ ('>',Font)                                           )) ⍝                                                                ⍝ Get gui custom font (global state)
GuiSetStyleRAYLIB         ←           R('GuiSetStyleRetPtr'         (i i i                                                   )) ⍝ control property value                                         ⍝ Set one style property
GuiGetStyleRAYLIB         ←           R('GuiGetStyleRetPtr'         (('>',i) i i                                             )) ⍝ control property                                               ⍝ Get one style property
GuiLoadStyleRAYLIB        ←           R('GuiLoadStyleRetPtr'        (,⊂ str                                                  )) ⍝ fileName                                                       ⍝ Load style file over global style variable (.rgs)
GuiLoadStyleDefaultRAYLIB ←           R('GuiLoadStyleDefaultRetPtr' (⍬                                                       )) ⍝                                                                ⍝ Load style default over global style
GuiEnableTooltipRAYLIB    ←           R('GuiEnableTooltipRetPtr'    (⍬                                                       )) ⍝                                                                ⍝ Enable gui tooltips (global state)
GuiDisableTooltipRAYLIB   ←           R('GuiDisableTooltipRetPtr'   (⍬                                                       )) ⍝                                                                ⍝ Disable gui tooltips (global state)
GuiSetTooltipRAYLIB       ←           R('GuiSetTooltipRetPtr'       (,⊂ str                                                  )) ⍝ tooltip                                                        ⍝ Set tooltip string
GuiIconTextRAYLIB         ←           R('GuiIconTextRetPtr'         (('>',str) i str                                         )) ⍝ iconId text                                                    ⍝ Get text with icon id prepended (if supported)
GuiSetIconScaleRAYLIB     ←           R('GuiSetIconScaleRetPtr'     (,⊂ i                                                    )) ⍝ scale                                                          ⍝ Set default icon drawing size
GuiGetIconsRAYLIB         ←           R('GuiGetIconsRetPtr'         (,⊂ ptr                                                  )) ⍝                                                                ⍝ Get raygui icons data pointer
GuiLoadIconsRAYLIB        ←           R('GuiLoadIconsRetPtr'        (ptr str bool                                            )) ⍝ fileName loadIconsName                                         ⍝ Load raygui icons file (.rgi) into internal icons data
GuiDrawIconRAYLIB         ←           R('GuiDrawIconRetPtr'         (i i i i Color                                           )) ⍝ iconId posX posY pixelSize color                               ⍝ Draw icon using pixel size at specified position
GuiWindowBoxRAYLIB        ←           R('GuiWindowBoxRetPtr'        (('>',i) Rectangle str                                   )) ⍝ bounds title                                                   ⍝ Window Box control, shows a window that can be closed
GuiGroupBoxRAYLIB         ←           R('GuiGroupBoxRetPtr'         (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Group Box control with text name
GuiLineRAYLIB             ←           R('GuiLineRetPtr'             (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Line separator control, could contain text
GuiPanelRAYLIB            ←           R('GuiPanelRetPtr'            (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Panel control, useful to group controls
GuiTabBarRAYLIB           ←           R('GuiTabBarRetPtr'           (('>',i) Rectangle ('<',str) i ('=',i)                   )) ⍝ bounds text count active                                       ⍝ Tab Bar control, returns TAB to be closed or -1
GuiScrollPanelRAYLIB      ←           R('GuiScrollPanelRetPtr'      (('>',i) Rectangle str Rectangle ('=',v2) ('=',Rectangle))) ⍝ bounds text content scroll view                                ⍝ Scroll Panel control
GuiLabelRAYLIB            ←           R('GuiLabelRetPtr'            (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Label control, shows text
GuiButtonRAYLIB           ←           R('GuiButtonRetPtr'           (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Button control, returns true when clicked
GuiLabelButtonRAYLIB      ←           R('GuiLabelButtonRetPtr'      (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Label button control, show true when clicked
GuiToggleRAYLIB           ←           R('GuiToggleRetPtr'           (('>',i) Rectangle str ('=',bool)                        )) ⍝ bounds text active                                             ⍝ Toggle Button control, returns true when active
GuiToggleGroupRAYLIB      ←           R('GuiToggleGroupRetPtr'      (('>',i) Rectangle str ('=',i)                           )) ⍝ bounds text active                                             ⍝ Toggle Group control, returns active toggle index
GuiToggleSliderRAYLIB     ←           R('GuiToggleSliderRetPtr'     (('>',i) Rectangle str ('=',i)                           )) ⍝ bounds text active                                             ⍝ Toggle Slider control, returns true when clicked
GuiCheckBoxRAYLIB         ←           R('GuiCheckBoxRetPtr'         (('>',i) Rectangle str ('=',bool)                        )) ⍝ bounds text checked                                            ⍝ Check Box control, returns true when active
GuiComboBoxRAYLIB         ←           R('GuiComboBoxRetPtr'         (('>',i) Rectangle str ('=',i)                           )) ⍝ bounds text active                                             ⍝ Combo Box control, returns selected item index
GuiDropdownBoxRAYLIB      ←           R('GuiDropdownBoxRetPtr'      (('>',i) Rectangle str ('=',i) bool                      )) ⍝ bounds text active editMode                                    ⍝ Dropdown Box control, returns selected item
GuiSpinnerRAYLIB          ←           R('GuiSpinnerRetPtr'          (('>',i) Rectangle str ('=',i) i i bool                  )) ⍝ bounds text value minValue maxValue editMode                   ⍝ Spinner control, returns selected value
GuiValueBoxRAYLIB         ←           R('GuiValueBoxRetPtr'         (('>',i) Rectangle str ('=',i) i i bool                  )) ⍝ bounds text value minValue maxValue editMode                   ⍝ Value Box control, updates input text with numbers
GuiTextBoxRAYLIB          ←           R('GuiTextBoxRetPtr'          (('>',i) Rectangle str i bool                            )) ⍝ bounds text textSize editMode                                  ⍝ Text Box control, updates input text
GuiSliderRAYLIB           ←           R('GuiSliderRetPtr'           (('>',i) Rectangle str str ('=',f) f f                   )) ⍝ bounds textLeft textRight value minValue maxValue              ⍝ Slider control, returns selected value
GuiSliderBarRAYLIB        ←           R('GuiSliderBarRetPtr'        (('>',i) Rectangle str str ('=',f) f f                   )) ⍝ bounds textLeft textRight value minValue maxValue              ⍝ Slider Bar control, returns selected value
GuiProgressBarRAYLIB      ←           R('GuiProgressBarRetPtr'      (('>',i) Rectangle str str ('=',f) f f                   )) ⍝ bounds textLeft textRight value minValue maxValue              ⍝ Progress Bar control, shows current progress value
GuiStatusBarRAYLIB        ←           R('GuiStatusBarRetPtr'        (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Status Bar control, shows info text
GuiDummyRecRAYLIB         ←           R('GuiDummyRecRetPtr'         (('>',i) Rectangle str                                   )) ⍝ bounds text                                                    ⍝ Dummy control for placeholders
GuiGridRAYLIB             ←           R('GuiGridRetPtr'             (('>',i) Rectangle str f i ('=',v2)                      )) ⍝ bounds text spacing subdivs mouseCell                          ⍝ Grid control, returns mouse cell position
GuiListViewRAYLIB         ←           R('GuiListViewRetPtr'         (('>',i) Rectangle str ('=',i) ('=',i)                   )) ⍝ bounds text scrollIndex active                                 ⍝ List View control, returns selected list item index
GuiListViewExRAYLIB       ←           R('GuiListViewExRetPtr'       (('>',i) Rectangle ('<',str) i ('=',i) ('=',i) ('=',i)   )) ⍝ bounds text count scrollIndex active focus                     ⍝ List View with extended parameters
GuiMessageBoxRAYLIB       ←           R('GuiMessageBoxRetPtr'       (('>',i) Rectangle str str str                           )) ⍝ bounds title message buttons                                   ⍝ Message Box control, displays a message
GuiTextInputBoxRAYLIB     ←           R('GuiTextInputBoxRetPtr'     (('>',i) Rectangle str str str str i ('=',bool)          )) ⍝ bounds title message buttons text textMaxSize secretViewActive ⍝ Text Input Box control, ask for text, supports secret
GuiColorPickerRAYLIB      ←           R('GuiColorPickerRetPtr'      (('>',i) Rectangle str ('=',Color)                       )) ⍝ bounds text color                                              ⍝ Color Picker control (multiple color controls)
GuiColorPanelRAYLIB       ←           R('GuiColorPanelRetPtr'       (('>',i) Rectangle str ('=',Color)                       )) ⍝ bounds text color                                              ⍝ Color Panel control
GuiColorBarAlphaRAYLIB    ←           R('GuiColorBarAlphaRetPtr'    (('>',i) Rectangle str ('=',f)                           )) ⍝ bounds text alpha                                              ⍝ Color Bar Alpha control
GuiColorBarHueRAYLIB      ←           R('GuiColorBarHueRetPtr'      (('>',i) Rectangle str ('=',f)                           )) ⍝ bounds text value                                              ⍝ Color Bar Hue control
GuiColorPickerHSVRAYLIB   ←           R('GuiColorPickerHSVRetPtr'   (('>',i) Rectangle str ('=',v3)                          )) ⍝ bounds text colorHsv                                           ⍝ Color Picker control that avoids conversion to RGB on each call (multiple color controls)
GuiColorPanelHSVRAYLIB    ←           R('GuiColorPanelHSVRetPtr'    (('>',i) Rectangle str ('=',v3)                          )) ⍝ bounds text colorHsv                                           ⍝ Color Panel control that returns HSV color value, used by GuiColorPickerHSV()
AfterDefaultDefinitions mode 'rayguiReplacement.apln.hide'
∇
:EndNamespace
